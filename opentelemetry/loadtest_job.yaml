apiVersion: batch/v1
kind: CronJob
metadata:
  name: loadtestservice
  labels:
    app.kubernetes.io/component: loadtest
    app.kubernetes.io/part-of: hipster-shop
    app.kubernetes.io/name: loadtest
    app.kubernetes.io/version: "1.0.0"
    dt.owner: oteldemo
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/version: "1.6.0"
            opentelemetry.io/name: opentelemetry-demo-loadgenerator
            app.kubernetes.io/instance: opentelemetry-demo
            app.kubernetes.io/component: loadgenerator
            app.kubernetes.io/name: opentelemetry-load
            app.kubernetes.io/part-of: opentelemetry-demo
            oneagent.dynatrace.com/inject: "false"
            sidecar.istio.io/inject: "false"
            dt.owner: oteldemo
          annotations:
            app.kubernetes.io/name: opentelemetry-load
            app.kubernetes.io/part-of: opentelemetry-demo
            oneagent.dynatrace.com/inject: "false"
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: OnFailure
          serviceAccountName: opentelemetry-demo
          containers:
            - name: loadgenerator
              image: 'ghcr.io/open-telemetry/demo:1.6.0-loadgenerator'
              imagePullPolicy: IfNotPresent
              ports:

                - containerPort: 8089
                  name: service
              env:
                - name: OTEL_SERVICE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.labels['app.kubernetes.io/component']
                - name: OTEL_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: OTEL_K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: OTEL_K8S_POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: OTEL_K8S_POD_UID
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.uid
                - name: OTEL_COLLECTOR_NAME
                  value: 'oteld-collector.default.svc.cluster.local'
                - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
                  value: delta
                - name: LOCUST_WEB_PORT
                  value: "8089"
                - name: LOCUST_USERS
                  value: "50"
                - name: LOCUST_RUN_TIME
                  value: "90m"
                - name: LOCUST_SPAWN_RATE
                  value: "1"
                - name: LOCUST_HOST
                  value: http://oteldemo.IP_TO_REPLACE.nip.io
                - name: LOCUST_HEADLESS
                  value: "false"
                - name: LOCUST_AUTOSTART
                  value: "true"
                - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
                  value: python
                - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
                  value: http://$(OTEL_COLLECTOR_NAME):4318/v1/traces
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
              resources:
                limits:
                  memory: 120Mi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: loadtestservice2
  labels:
    app.kubernetes.io/component: loadtest
    app.kubernetes.io/part-of: hipster-shop
    app.kubernetes.io/name: loadtest
    app.kubernetes.io/version: "1.0.0"
    dt.owner: oteldemo
spec:
  schedule: "30 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/version: "1.6.0"
            opentelemetry.io/name: opentelemetry-demo-loadgenerator
            app.kubernetes.io/instance: opentelemetry-demo
            app.kubernetes.io/component: loadgenerator
            app.kubernetes.io/name: opentelemetry-load
            app.kubernetes.io/part-of: opentelemetry-demo
            dt.owner: oteldemo
          annotations:
            app.kubernetes.io/name: opentelemetry-load
            app.kubernetes.io/part-of: opentelemetry-demo
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: OnFailure
          serviceAccountName: opentelemetry-demo
          containers:
            - name: loadgenerator
              image: 'ghcr.io/open-telemetry/demo:1.6.0-loadgenerator'
              imagePullPolicy: IfNotPresent
              ports:

                - containerPort: 8089
                  name: service
              env:
                - name: OTEL_SERVICE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.labels['app.kubernetes.io/component']
                - name: OTEL_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: OTEL_K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: OTEL_K8S_POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: OTEL_K8S_POD_UID
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.uid
                - name: OTEL_COLLECTOR_NAME
                  value: 'oteld-collector.default.svc.cluster.local'
                - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
                  value: delta
                - name: LOCUST_WEB_PORT
                  value: "8089"
                - name: LOCUST_USERS
                  value: "50"
                - name: LOCUST_RUN_TIME
                  value: "90m"
                - name: LOCUST_SPAWN_RATE
                  value: "1"
                - name: LOCUST_HOST
                  value: http://oteldemo.IP_TO_REPLACE.nip.io
                - name: LOCUST_HEADLESS
                  value: "false"
                - name: LOCUST_AUTOSTART
                  value: "true"
                - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
                  value: python
                - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
                  value: http://$(OTEL_COLLECTOR_NAME):4318/v1/traces
                - name: OTEL_RESOURCE_ATTRIBUTES
                  value: service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(OTEL_K8S_POD_UID),service.namespace=opentelemetry-demo,k8s.namespace.name=$(OTEL_K8S_NAMESPACE),k8s.node.name=$(OTEL_K8S_NODE_NAME),k8s.pod.name=$(OTEL_K8S_POD_NAME)
              resources:
                limits:
                  memory: 120Mi